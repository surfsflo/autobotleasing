@model ABLeasing.Web.Models.Lease

@{
	ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
	@Html.ValidationSummary(true)

	<fieldset>
		<legend>Lease</legend>

		<div class="control-group">
			@Html.LabelFor(model => model.Name)
		
			<div class="controls">
				@Html.EditorFor(model => model.Name)
				@Html.ValidationMessageFor(model => model.Name, string.Empty, new { @class="help-inline" })
			</div>
		</div>

		<div class="control-group">
			@Html.LabelFor(model => model.Description)
		
			<div class="controls">
				@Html.EditorFor(model => model.Description)
				@Html.ValidationMessageFor(model => model.Description, string.Empty, new { @class="help-inline" })
			</div>
		</div>

		<div class="control-group">
			@Html.LabelFor(model => model.PrincipalAmount)
		
			<div class="controls">
				@Html.EditorFor(model => model.PrincipalAmount)
				@Html.ValidationMessageFor(model => model.PrincipalAmount, string.Empty, new { @class="help-inline" })
			</div>
		</div>

		<div class="control-group">
			@Html.LabelFor(model => model.InterestRate)
		
			<div class="controls">
				@Html.EditorFor(model => model.InterestRate)
				@Html.ValidationMessageFor(model => model.InterestRate, string.Empty, new { @class="help-inline" })
			</div>
		</div>

		<div class="control-group">
			@Html.LabelFor(model => model.ProfitShareRate)
		
			<div class="controls">
				@Html.EditorFor(model => model.ProfitShareRate)
				@Html.ValidationMessageFor(model => model.ProfitShareRate, string.Empty, new { @class="help-inline" })
			</div>
		</div>

		<div class="control-group">
			@Html.LabelFor(model => model.OperatorId)
		
			<div class="controls">
				@Html.EditorFor(model => model.OperatorId)
				@Html.ValidationMessageFor(model => model.OperatorId, string.Empty, new { @class="help-inline" })
			</div>
		</div>

		<div class="control-group">
			@Html.LabelFor(model => model.PurchaseCooperativeId)
		
			<div class="controls">
				@Html.EditorFor(model => model.PurchaseCooperativeId)
				@Html.ValidationMessageFor(model => model.PurchaseCooperativeId, string.Empty, new { @class="help-inline" })
			</div>
		</div>

		<div class="control-group">
			@Html.LabelFor(model => model.LocationId)
		
			<div class="controls">
				@Html.EditorFor(model => model.LocationId)
				@Html.ValidationMessageFor(model => model.LocationId, string.Empty, new { @class="help-inline" })
			</div>
		</div>

		<div class="control-group">
			@Html.LabelFor(model => model.Created)
		
			<div class="controls">
				@Html.EditorFor(model => model.Created)
				@Html.ValidationMessageFor(model => model.Created, string.Empty, new { @class="help-inline" })
			</div>
		</div>

		<div class="control-group">
			@Html.LabelFor(model => model.Updated)
		
			<div class="controls">
				@Html.EditorFor(model => model.Updated)
				@Html.ValidationMessageFor(model => model.Updated, string.Empty, new { @class="help-inline" })
			</div>
		</div>

		<div class="control-group">
			<div class="controls">
				<input type="submit" value="Create" class="btn" /> &nbsp; @Html.ActionLink("Cancel", "Index")
			</div>
		</div>
	</fieldset>
}


@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")

	<script>

	$.validator.setDefaults({
			highlight: function (element) {
				$(element).closest(".control-group").addClass("error");
			},
			unhighlight: function (element) {
				$(element).closest(".control-group").removeClass("error");
			}
		});
	</script>
}
